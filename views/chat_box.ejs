<%- include('components/header') %>

  <body>
    <%- include('components/logo.ejs') %>

    <aside class="sidebar-container">
      <%- include('components/sideBar.ejs') %>
    </aside>

    <main
      class="content main-chatbox p-4 d-flex flex-column justify-content-between"
    >
      <!-- Exibindo a resposta -->
      <div class="conversation-box">
        <% chat.history.forEach(message => { %>
        <!-- Pergunta do usuário -->
        <div class="chat-box-user-wrap d-flex flex-column align-items-end">
          <span class="chat-label mb-1">Você</span>
          <div class="chat-bubble user-message">
            <p class="mb-0"><%= message.question %></p>
          </div>
        </div>

        <!-- Resposta da IA -->
        <div class="chat-box-ia-wrap d-flex flex-column align-items-start">
          <span class="chat-label mb-1">IA</span>
          <div class="chat-bubble bot-response">
            <%- message.answer %>
          </div>
        </div>
        <% }); %>
      </div>

      <!-- Formulário de Pergunta do Usuário (Fixado no rodapé) -->
      <form
        action="/ask"
        method="POST"
        class="d-flex justify-content-center align-items-center p-0 mt-5"
        id="chatForm"
        return="sendQuestion()"
      >
        <div class="user-query d-flex flex-row justify-content-between w-100">
          <input type="hidden" name="chat_id" value="<%= chat.id %>" />
          <input
            type="text"
            class="form-control"
            placeholder="Exemplo: 'Como faço para me matricular em uma disciplina?'"
            id="userQuery"
            name="userQuery"
          />
          <button type="submit" class="btn btn-primary" id="submitBtn">
            <i class="fa-solid fa-arrow-right"></i>
          </button>
        </div>
      </form>
    </main>
  </body>

  <script>
    // Envio da pergunta e exibição da resposta sem recarregar a página
    document
      .getElementById("chatForm")
      .addEventListener("submit", function (event) {
        event.preventDefault(); // Impede o envio padrão do formulário
        const userQuery = document.getElementById("userQuery").value;
        const chat_id = document.querySelector('[name="chat_id"]').value; // Pega o chat_id

        if (userQuery.trim()) {
          // Desabilita o botão e mostra loading
          const submitBtn = document.getElementById("submitBtn");
          const originalContent = submitBtn.innerHTML;
          submitBtn.innerHTML = '<div class="loading-dots"><span></span><span></span><span></span></div>';
          submitBtn.disabled = true;

          // Adiciona a pergunta do usuário imediatamente
          const chatBox = document.querySelector(".conversation-box");
          const userMessage = document.createElement("div");
          userMessage.classList.add(
            "chat-box-user-wrap",
            "d-flex",
            "flex-column",
            "align-items-end"
          );
          userMessage.innerHTML = `
            <span class="chat-label mb-1">Você</span>
            <div class="chat-bubble user-message">
              <p class="mb-0">${userQuery}</p>
            </div>
          `;
          chatBox.appendChild(userMessage);

          // Adiciona o indicador de loading da IA
          const loadingMessage = document.createElement("div");
          loadingMessage.classList.add(
            "chat-box-ia-wrap",
            "d-flex",
            "flex-column",
            "align-items-start"
          );
          loadingMessage.innerHTML = `
            <span class="chat-label mb-1">IA</span>
            <div class="chat-bubble bot-response">
              <div class="loading-dots"><span></span><span></span><span></span></div>
            </div>
          `;
          chatBox.appendChild(loadingMessage);
          window.scrollTo(0, document.body.scrollHeight);

          // Limpa o input
          document.getElementById("userQuery").value = "";

          fetch("/ask", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ userQuery, chat_id }), // Envia a pergunta e o chat_id
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.sucesso) {
                // Remove o loading e adiciona a resposta real
                chatBox.removeChild(loadingMessage);
                
                // Resposta da IA
                const iaMessage = document.createElement("div");
                iaMessage.classList.add(
                  "chat-box-ia-wrap",
                  "d-flex",
                  "flex-column",
                  "align-items-start"
                );
                console.log(data.answer);
                iaMessage.innerHTML = `
                  <span class="chat-label mb-1">IA</span>
                  <div class="chat-bubble bot-response">
                    <p class="mb-0">${data.answer}</p>
                  </div>
                `;
                chatBox.appendChild(iaMessage);
              } else {
                // Remove o loading e mostra erro
                chatBox.removeChild(loadingMessage);
                console.error("Erro ao enviar a pergunta:", data.mensagem);
              }
            })
            .catch((error) => {
              // Remove o loading e mostra erro
              chatBox.removeChild(loadingMessage);
              console.error("Erro:", error);
            })
            .finally(() => {
              // Restaura o botão
              submitBtn.innerHTML = originalContent;
              submitBtn.disabled = false;
            });
        }
      });
  </script>

<%- include('components/footer') %>
